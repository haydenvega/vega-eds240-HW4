---
title: "HW2-exploration"
author: "Hayden Vega"
date: 02/08/25
format:
  html:
    embed-resources: true # this ensures that your rendered .html file is self-contained, so we (your instructors) can open it and view all your work
---

# HW 2 Exploration

```{r, warning=FALSE, message=FALSE}
# library
library(janitor)
library(tidyverse)
library(ggeffects)
library(sjlabelled)
library(lme4)
library(DHARMa)
library(parameters)
library(effects)
library(MuMIn)
```

#Load in data for each trait with individual ID delimiter

```{r, warning=FALSE, message=FALSE}
height_all <- read.csv("final_height.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

width_all <- read.csv("final_width.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

perimeter_all <- read.csv("final_perimeter.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

surf_all <- read.csv("final_surf.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

tdmc_all <- read.csv("final_tdmc.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

thickness_all <- read.csv("final_thickness.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")

volume_all <- read.csv("final_volume.csv", header = TRUE, sep = ",") %>% separate_wider_delim(specimen_id, delim = "-", names = c("date", "site", "individual", "specimen"), cols_remove=FALSE) %>% 
  unite("individual_id", date:individual, remove = TRUE, sep = "-")



```

```{r, warning=FALSE, message=FALSE}
# ggplot theme
theme_set(theme_bw() +
            theme(panel.grid = element_blank()))

# abline color
ref_line_col <- "grey"

# model prediction color
model_col <- "darkblue"
```

#Create multiple regression for width, height - initial & rehydrate & herbarium WITH & WITHOUT species

```{r, warning=FALSE, message=FALSE}

height_reg_ir <- lmer(height_i ~ height_r * species + (1 | individual_id), data = height_all)
summary(height_reg_ir)

height_reg_ir_nospecies <- lmer(height_i ~ height_r + (1 | individual_id), data = height_all)
summary(height_reg_ir_nospecies)
```

```{r, warning=FALSE, message=FALSE}
width_reg_ih <- lmer(width_i ~ width_h * species + (1 | individual_id), data = width_all)
summary(width_reg_ih)

width_reg_ih_nospecies <- lmer(width_i ~ width_h + (1 | individual_id), data = width_all)
summary(width_reg_ih_nospecies)
```
#Compare models using AIC;species & no species for Initial and Rehydrate

```{r height-AIC, warning=FALSE, message=FALSE}
model.sel(height_reg_ir, height_reg_ir_nospecies)
#nospecies is better
```

#Calculating R\^2 Value

```{r r^2-height, warning=FALSE, message=FALSE}
MuMIn::r.squaredGLMM(height_reg_ir_nospecies)
```


#Save predictions as an object using ggpredict (so we can plot later)

```{r, warning=FALSE, message=FALSE}
height_ir_predictions <- ggpredict(height_reg_ir_nospecies, terms = "height_r[0:45]") %>% 
  mutate(trait = "height")

height_ir_predictions
```


```{r}
width_ih_predictions <- ggpredict(width_reg_ih_nospecies, terms = "width_h[0:30]") #max width = 24

# look at the data frame
width_ih_predictions

width_ih_predictions_species <- ggpredict(width_reg_ih, terms = c("width_h", "species")) %>% 
  as_tibble() %>% 
  rename(species = group)
```


#Visualize the rehydrate models without species

```{r, warning=FALSE, message=FALSE}
height_ir_plot <- ggplot() +
  
  # plot the raw data as points
  geom_point(data = height_all,
             aes(x = height_r,
                 y = height_i),
             alpha = 0.5,
             color = model_col,
             shape = 21) +
  
  # plot a 1:1 reference line
  geom_abline(slope = 1, 
              intercept = 0,
              linetype = 2,
              linewidth = 1,
              color = ref_line_col) +
  
  # plot the confidence interval 
  geom_ribbon(data = height_ir_predictions,
              aes(x = x,
                  y = predicted,
                  ymin = conf.low,
                  ymax = conf.high),
              alpha = 0.2,
              fill = model_col) +
  
  # plot the prediction line
  geom_line(data = height_ir_predictions,
            aes(x = x,
                y = predicted),
            color = model_col,
            linewidth = 1) +
  
  # labels
  labs(x = "Rehydrate height (mm)",
       y = "Initial height (mm)") +
  
  # controlling axes to make the plot look square
  # this makes it easier to see the difference between the model and the 1:1 line
  scale_x_continuous(breaks = seq(from = 0, to = 50, by = 10), 
                     limits = c(0, 50)) +
  scale_y_continuous(breaks = seq(from = 0, to = 50, by = 10), 
                     limits = c(0, 50))+
  #add equation + r squared
   annotate("text", x = 10, y = 45, label= "y = 1.02x + 0.0407
R squared = 0.996")
  

height_ir_plot
```


```{r, warning=FALSE, message=FALSE}
width_ih_plot <- ggplot() +
  
  # plot the raw data as points
  geom_point(data = width_all,
             aes(x = width_h,
                 y = width_i),
             alpha = 0.5,
             color = model_col,
             shape = 21) +
  
  # plot a 1:1 reference line
  geom_abline(slope = 1, 
              intercept = 0,
              linetype = 2,
              linewidth = 1,
              color = ref_line_col) +
  
  # plot the confidence interval 
  geom_ribbon(data = width_ih_predictions,
              aes(x = x,
                  y = predicted,
                  ymin = conf.low,
                  ymax = conf.high),
              alpha = 0.2,
              fill = model_col) +
  
  # plot the prediction line
  geom_line(data = width_ih_predictions,
            aes(x = x,
                y = predicted),
            color = model_col,
            linewidth = 1) +
  
  # labels
  labs(x = "Herbarium width (mm)",
       y = "Initial width (mm)") +
  
  # controlling axes to make the plot look square
  # this makes it easier to see the difference between the model and the 1:1 line
  scale_x_continuous(breaks = seq(from = 0, to = 20, by = 5), 
                     limits = c(0, 20)) +
  scale_y_continuous(breaks = seq(from = 0, to = 20, by = 5), 
                     limits = c(0, 20))
width_ih_plot

###############################################################################
#SPECIES FACET

width_ih_plot_species <- ggplot() +
  
  geom_point(data = width_all,
             aes(x = width_h,
                 y = width_i,
                 color = species),
             alpha = 0.5,
             shape = 21) + 
  
  # plot a 1:1 reference line
  geom_abline(slope = 1, 
              intercept = 0,
              linetype = 2,
              linewidth = 1,
              color = ref_line_col) +
  
  # plot the confidence intervals
  geom_ribbon(data = width_ih_predictions_species,
            aes(x = x,
                y = predicted,
                ymin = conf.low,
                ymax = conf.high,
                fill = species,
                group = species),
            alpha = 0.2) +
  
  # plot the model predictions
  geom_line(data = width_ih_predictions_species,
            aes(x = x,
                y = predicted,
                color = species,
                group = species)) +
  
  # labels
  labs(x = "Herbarium width (mm)",
       y = "Initial width (mm)") +
  
  # theme
  theme(legend.position = "none",
        strip.background = element_blank(),
        strip.text = element_text(size = 12)) +
  
  # facet
  facet_wrap(~ species, nrow = 2,
             scales = "free")


  width_ih_plot_species

```





# 2c Questions

1.  I have learned that linear models vary in efficacy based on the incorporation of species.
2.  Yes, but I think I still need to review if my residuals look okay! I might have to restructure data, but I hope not. I'm still trying to think about what I want to say about my data. I want to create a summary figure, but I'm not sure what I should include.
3.  I think I'll have a really hard time with my residual checks and creating a summary figure with all species...It seems too busy; I should go to office hours.
